name: "Build and deploy"

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
    types: [ "closed" ]

env:
  VERSION: 0.0.1-SNAPSHOT

jobs:
  build-bot:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Get cache for local Maven repository
        uses: actions/cache/restore@v4
        with:
          path: ~/.m2/repository
          key: maven
      - name: Build the bot
        run: mvn --batch-mode --update-snapshots install --file pom.xml
      - name: Copy jar
        run: cp /home/runner/work/wisdoms/wisdoms/target/wisdoms-*.jar bot.jar
      - name: Archive bot jar
        uses: actions/upload-artifact@v4
        with:
          name: bot
          path: bot.jar
          retention-days: 1

  create-image-bot:
    runs-on: ubuntu-latest
    needs: build-bot
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: bot
          path: containerimage
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/seism0saurus/wisdoms
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: containerimage/.
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-bot:
    runs-on: ubuntu-latest
    needs: create-image-bot
    environment: seism0saurus@botsin.space
    steps:
      - name: Prepare ssh
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}
        run: |
          echo "${SSH_KEY}" > ssh.key
          chmod 600 ssh.key
          mkdir ~/.ssh
          echo "${KNOWN_HOSTS}" > ~/.ssh/known_hosts
      - name: Restart docker-compose
        env:
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ vars.SSH_HOST }}
        run: ssh -i ssh.key -p ${SSH_PORT} ${SSH_USER}@${SSH_HOST} -C "sudo /usr/local/bin/upgrade-wisdoms.sh"
